{"version":3,"sources":["app.js","index.js"],"names":["express","require","html","app","get","req","res","set","status","send","module","exports","_express","_interopRequireWildcard","_bodyParser","_interopRequireDefault","_cors","_http","_formidable","_fs","_multer","_stream","_path","_etag","_https","_url","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","port","corsOptions","origin","credentials","optionSuccessStatus","use","cors","bodyParser","json","limit","post","next","_req$body","console","log","body","menu","menuJson","JSON","stringify","writeFile","encoding","flag","mode","err","redirect","readFile","data","writeHead","write","end","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const express = require('express');\r\n\r\nconst html = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <title>A JavaScript project</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n</head>\r\n<body>\r\n  <h1>A JavaScript project</h1>\r\n</body>\r\n</html>`;\r\n\r\nconst app = express();\r\n\r\napp.get('/', (req, res) => {\r\n  res.set('Content-Type', 'text/html');\r\n  res.status(200).send(html);\r\n});\r\n\r\nmodule.exports = app;","const app = require('./app');\r\n\r\nimport express, { json } from 'express';\r\nimport bodyParser from 'body-parser';\r\n\r\nimport cors from 'cors';\r\nimport http from 'http';\r\nimport formidable from 'formidable';\r\nimport { readFileSync, readFile, writeFile, appendFile } from 'fs';\r\nimport multer, { diskStorage } from \"multer\";\r\nimport stream from 'stream';\r\nimport path from \"path\";\r\nimport etag from 'etag';\r\n//\r\nimport { dirname } from 'path';\r\nimport {createServer} from \"https\"\r\nimport {fileURLToPath} from 'url';\r\n// const app = express();\r\n\r\nconst port = '8080';\r\nvar corsOptions = {\r\n  origin: \"http://localhost:3000\",\r\n  credentials: true,            //access-control-allow-credentials:true\r\n  optionSuccessStatus:200,\r\n};\r\n\r\napp.use(cors(corsOptions));\r\n\r\n;\r\n//app.use(bodyParser.urlencoded({ extended: false }));\r\n\r\n\r\n\r\n\r\napp.use(bodyParser.json({limit: '50mb'}));\r\n\r\n\r\n\r\napp.post(\"/storedMenu/\", function(req, res, next) {\r\n\r\n   console.log(req.body?.menu, \"ZXCVBNM\");\r\n\r\n  \r\n  \r\n  const menuJson =  JSON.stringify(req.body.menu)\r\n  \r\n  \r\n  \r\n   writeFile(\"menu.json\", menuJson,   {\r\n     encoding: \"utf8\",\r\n     flag: \"w\",\r\n     mode: 0o666\r\n   }  , function(err) {\r\n     if(err) {\r\n         return console.log(err, \"error writing to storedMenu.json\");\r\n     }\r\n     console.log(\"The storedMenu file was saved!\");\r\n  });\r\n \r\n  \r\n  \r\n      res.redirect(\"/\")\r\n    });\r\n    app.get(\"/loadMenu\", function(req, res, next) {\r\n      console.log(\"get\");\r\n    readFile('menu.json', function(err, data) {\r\n        res.writeHead(200, {'Content-Type': 'json'});\r\n        res.write(data);\r\n        return res.end();\r\n      });\r\n    })\r\n    \r\n  app.get(\"/hello\", function(req, res, next) {\r\n    console.log(\"hello ok\");\r\n  })\r\n\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});"]}